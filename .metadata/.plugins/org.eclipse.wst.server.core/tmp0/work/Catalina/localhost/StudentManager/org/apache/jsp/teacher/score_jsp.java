/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.33
 * Generated at: 2020-06-23 04:56:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.teacher;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import vo.Teacher;
import vo.Score;
import java.util.ArrayList;
import dao.StudentD;

public final class score_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("vo.Score");
    _jspx_imports_classes.add("dao.StudentD");
    _jspx_imports_classes.add("vo.Teacher");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <title>Quản lý điểm số</title>\n");
      out.write("    <link href=\"../resources/css/default.css\" rel=\"stylesheet\"/>\n");
      out.write("</head>\n");
      out.write("<body>\n");

    Teacher teacher = (Teacher) session.getAttribute("info");
    ArrayList<Score> stus = (ArrayList<Score>) session.getAttribute("onePageScore");
    int sumIndex = (int) session.getAttribute("sumScoreIndex");

      out.write("\n");
      out.write("<div id=\"page\" class=\"container\">\n");
      out.write("    <div id=\"header\">\n");
      out.write("        <div id=\"logo\">\n");
      out.write("            <img src=\"../userImg/");
      out.print(teacher.getId());
      out.write(".jpeg\"/>\n");
      out.write("            <h1>");
      out.print(teacher.getId());
      out.write("\n");
      out.write("            </h1>\n");
      out.write("        </div>\n");
      out.write("        <div id=\"menu\">\n");
      out.write("            <ul>\n");
      out.write("                <li><a href=\"personal.jsp\">Thông tin cá nhân</a></li>\n");
      out.write("                <li><a href=\"../one_page_student\">Quản lý sinh viên</a></li>\n");
      out.write("                <li class=\"current_page_item\"><a href=\"../one_page_score\">Quản lý điểm số</a></li>\n");
      out.write("                <li><a onclick=\"return confirm('Bạn có chắc muốn thoát?');\" href=\"../exit\">Đăng xuất</a></li>\n");
      out.write("            </ul>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("    <div id=\"main\">\n");
      out.write("        <div class=\"top\">\n");
      out.write("            <h2>Danh sách điểm số</h2>\n");
      out.write("            <hr/>\n");
      out.write("        </div>\n");
      out.write("        <form method=\"post\" action=\"../update_score\" style=\"height: 525px; margin-top: 20px\">\n");
      out.write("            <input type=\"button\" class=\"btn-add\" onclick=\"location.href='score_excel.jsp';\" value=\"Xuất EXCEL\">\n");
      out.write("            <input type=\"submit\" class=\"btn-add\" style=\"float: right;margin-bottom: 30px\" value=\"Cập nhật\">\n");
      out.write("            <div class=\"table\" style=\"margin-top: 20px; height: 525px\">\n");
      out.write("                <table id=\"table\" width=\"800\" frame=\"box\" align=\"center\">\n");
      out.write("                    <tr>\n");
      out.write("                        <th height=\"35\">Mã sinh viên</th>\n");
      out.write("                        <th>Họ tên</th>\n");
      out.write("                        <th>Chuyên ngành</th>\n");
      out.write("                        <th>CSDL</th>\n");
      out.write("                        <th>Android</th>\n");
      out.write("                        <th>JavaWeb</th>\n");
      out.write("                    </tr>\n");
      out.write("                    ");

                        try {
                            StudentD stuD = new StudentD();
                            for (Score stu : stus) {
                                String name = stuD.findWithId(stu.getId()).getName();
                                String major = stuD.findWithId(stu.getId()).getMajor();
                    
      out.write("\n");
      out.write("                    <tr>\n");
      out.write("                        <td height=\"35\">");
      out.print(stu.getId());
      out.write("</td>\n");
      out.write("                        <td>");
      out.print(name);
      out.write("</td>\n");
      out.write("                        <td>");
      out.print(major);
      out.write("</td>\n");
      out.write("                        <td><input value=\"");
      out.print(stu.getDatabase());
      out.write("\" name=\"database\" class=\"table-input\"></td>\n");
      out.write("                        <td><input value=\"");
      out.print(stu.getAndroid());
      out.write("\" name=\"android\" class=\"table-input\"></td>\n");
      out.write("                        <td><input value=\"");
      out.print(stu.getJsp());
      out.write("\" name=\"jsp\" class=\"table-input\"></td>\n");
      out.write("                        <input value=\"");
      out.print(stu.getId());
      out.write("\" name=\"id\" type=\"hidden\">\n");
      out.write("                    </tr>\n");
      out.write("                    ");

                            }
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                    
      out.write("\n");
      out.write("                </table>\n");
      out.write("\n");
      out.write("            </div>\n");
      out.write("        </form>\n");
      out.write("\n");
      out.write("        ");

            if (sumIndex > 1){
        
      out.write("\n");
      out.write("                <div id=\"index\">\n");
      out.write("                    <a href=\"../one_page_score?index=1\">Trang chủ</a>\n");
      out.write("                    ");

                        for (int i = 1; i <= sumIndex; i++) {
                    
      out.write("\n");
      out.write("                    <a href=\"../one_page_score?index=");
      out.print(i);
      out.write("\">Trang đầu");
      out.print(i);
      out.write("trang</a>\n");
      out.write("                    ");

                        }
                    
      out.write("\n");
      out.write("                    <a href=\"../one_page_score?index=");
      out.print(sumIndex);
      out.write("\">Trang cuối</a>\n");
      out.write("                </div>\n");
      out.write("        ");

            }
        
      out.write("\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("</body>\n");
      out.write("</html>\n");
      out.write("\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
